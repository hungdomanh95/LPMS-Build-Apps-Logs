// lpms-build-apps-logs/scripts/generate-readme.js
// Sinh README.md: hiển thị 5 dòng log gần nhất cho mỗi app (bảng 5 cột: ... | Link |)

const fs = require("fs");
const path = require("path");

// Chạy script ngay trong thư mục lpms-build-apps-logs
const LOG_DIR = process.cwd();

// Khai báo danh sách file + thông tin hiển thị
const FILES = [
  { app: "Msales", env: "UAT",  file: "Msales_UAT.md",  color: "1f77b4", anchor: "msales-uat" },
  { app: "Msales", env: "PROD", file: "Msales_PROD.md", color: "e74c3c", anchor: "msales-prod" },
  { app: "Dsales", env: "UAT",  file: "Dsales_UAT.md",  color: "8e44ad", anchor: "dsales-uat" },
  { app: "Dsales", env: "PROD", file: "Dsales_PROD.md", color: "27ae60", anchor: "dsales-prod" },
];

// Header bảng 5 cột (cột cuối: Link)
const TABLE_HEADER =
  "| Date (VN) | App | Version | Description | Link |\n" +
  "|---|---|---|---|---|";

// Regex phát hiện separator 5 cột
const SEP_REGEX_5 = /^\|[- ]+\|[- ]+\|[- ]+\|[- ]+\|[- ]+\|$/;

function readFileSafe(absPath) {
  try { return fs.readFileSync(absPath, "utf8"); } catch { return ""; }
}

function makeBadgeURL(app, env, color) {
  return `https://img.shields.io/badge/${encodeURIComponent(app)}-${encodeURIComponent(env)}-${color}?style=for-the-badge&logo=android&logoColor=white`;
}

// Lấy 5 dòng dữ liệu ngay sau separator
function extractTopRows(md, count = 5) {
  if (!md) return [];
  const lines = md.replace(/\r\n/g, "\n").split("\n");

  const sepIdx = lines.findIndex(l => SEP_REGEX_5.test(l.trim()));
  if (sepIdx === -1) return [];

  const rows = [];
  for (let i = sepIdx + 1; i < lines.length; i++) {
    const line = (lines[i] || "").trim();
    if (!line || !line.startsWith("|")) break;
    rows.push(lines[i]); // giữ nguyên định dạng cell (có badge Android/iOS trong cột Link)
    if (rows.length >= count) break;
  }
  return rows;
}

function quickLinks() {
  const cells = FILES.map(info => {
    const badge = makeBadgeURL(info.app, info.env, info.color);
    return `<td width="25%"><a href="#${info.anchor}"><img alt="${info.app} ${info.env}" src="${badge}"/></a></td>`;
  }).join("\n    ");
  return `
## 🔗 Nhanh: Tới file log

<table>
  <tr>
    ${cells}
  </tr>
</table>`;
}

function sectionFor(info) {
  const abs = path.join(LOG_DIR, info.file);
  const md = readFileSafe(abs);
  const rows = extractTopRows(md, 5);
  const table = rows.length ? [TABLE_HEADER, ...rows].join("\n") : `${TABLE_HEADER}\n| _No data_ |  |  |  |  |`;

  const badge = makeBadgeURL(info.app, info.env, info.color);

  return `
<a id="${info.anchor}"></a>
<h3>
  <img alt="${info.app} ${info.env}" src="${badge}" />
</h3>

<p>
  <a href="./${info.file}"><strong>➡️ Xem đầy đủ (${info.file})</strong></a>
</p>

${table}
`;
}

function buildREADME() {
  const header = `<!-- Auto-generated by scripts/generate-readme.js -->
<p align="center">
  <img src="https://img.shields.io/badge/Build-Logs-222?style=for-the-badge" alt="Build Logs"/>
</p>

<h1 align="center">📦 LPMS – Build Apps Logs</h1>

> Bên dưới là <strong>5 dòng gần nhất</strong> của mỗi ứng dụng. Click ở mục <em>“Nhanh: Tới file log”</em> để cuộn xuống bảng; trong mỗi block có nút <em>“Xem đầy đủ”</em> để mở file gốc.
`;

  const sections = FILES.map(sectionFor).join("\n---\n");

  const footer = `
---

<p align="center">
  <sub>Latest-first · Made for MAFC</sub>
</p>
`;

  return [header, quickLinks(), sections, footer].join("\n\n");
}

function main() {
  const out = buildREADME();
  const outPath = path.join(LOG_DIR, "README.md");
  fs.writeFileSync(outPath, out, "utf8");
  console.log(`✅ README.md generated at: ${outPath}`);
}

main();
